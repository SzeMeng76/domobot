# =============================================================================
# Telegram Bot 配置文件
# 复制此文件为 .env 并填入实际值
# =============================================================================

# 📋 快速配置指南：
# 1. 必须设置：BOT_TOKEN, SUPER_ADMIN_ID
# 2. 推荐设置：DEBUG=false (生产环境)
# 3. 可选设置：WEBHOOK_* (仅使用 Webhook 时)
# 4. 其他配置都有合理默认值，可不设置

# =============================================================================
# 基础配置 (必需)
# =============================================================================

# 机器人Token - 从 @BotFather 获取
BOT_TOKEN=123456789:ABCDEFGHIJKLMNOPQRSTUVWXYZ

# 超级管理员用户ID - 从 @userinfobot 获取
SUPER_ADMIN_ID=123456789

# 调试模式 - 生产环境设为 false
DEBUG=false

# =============================================================================
# Webhook 配置 (可选，不设置则使用轮询模式)
# =============================================================================

# Webhook URL - 你的服务器 HTTPS 地址，设置后启用 Webhook 模式
WEBHOOK_URL=

# Webhook 监听地址 - Docker环境下建议设为 0.0.0.0
WEBHOOK_LISTEN=0.0.0.0
WEBHOOK_PORT=8443

# Webhook 密钥 - 留空自动生成
WEBHOOK_SECRET_TOKEN=

# SSL 证书路径 - 使用 Nginx 反代时留空
WEBHOOK_KEY=
WEBHOOK_CERT=

# =============================================================================
# 可选配置 (有合理默认值，可不设置)
# =============================================================================

# 消息自动删除时间 (秒)
AUTO_DELETE_DELAY=180

# 是否删除用户命令消息
DELETE_USER_COMMANDS=true

# 缓存目录
CACHE_DIR=data/cache



# 汇率API密钥 - 从 https://openexchangerates.org/ 获取
# 多个密钥用逗号分隔，留空使用免费API
EXCHANGE_RATE_API_KEYS=

# 日志级别: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# 消息折叠阈值（行数）
FOLDING_THRESHOLD=15

# =============================================================================
# 高级配置 (一般不需要修改)
# =============================================================================

# 缓存时间配置 (秒) - 不设置使用内置默认值
# DEFAULT_CACHE_DURATION=3600               # 默认缓存时间
# RATE_CACHE_DURATION=3600                  # 汇率缓存
# APP_STORE_CACHE_DURATION=1209600          # App Store (14天)
# STEAM_CACHE_DURATION=259200               # Steam (3天)
# NETFLIX_CACHE_DURATION=86400              # Netflix (1天)

# 性能配置
# MAX_CONCURRENT_REQUESTS=10                # 最大并发请求数
# REQUEST_TIMEOUT=30                        # 请求超时时间
# RATE_LIMIT_ENABLED=true                   # 启用速率限制
# MAX_REQUESTS_PER_MINUTE=30                # 每分钟最大请求数

# 日志配置
# LOG_FILE=                                 # 日志文件路径 (空值自动生成)
# LOG_MAX_SIZE=10485760                     # 日志文件最大大小
# LOG_BACKUP_COUNT=5                        # 保留日志文件数量

# 定时清理
# SPOTIFY_WEEKLY_CLEANUP=true               # Spotify每周清理
# DISNEY_WEEKLY_CLEANUP=true                # Disney+每周清理

# 自定义脚本
# LOAD_CUSTOM_SCRIPTS=false                 # 是否加载自定义脚本
# CUSTOM_SCRIPTS_DIR=custom_scripts          # 自定义脚本目录


# Enable user cache (true/false)
ENABLE_USER_CACHE=false
# Comma-separated list of group IDs to cache users from (e.g., -100123456,-100987654). Leave empty to cache from all groups if enabled.
USER_CACHE_GROUP_IDS=

# Alerter script config: JSON string mapping group IDs to target usernames.
# Example: '{"-100123456": "user1", "-100789012": "user2"}'
ALERTER_CONFIG='{}'

# =============================================================================
# 使用说明
# =============================================================================

# 📖 快速开始：
# 1. 复制此文件：cp .env.example .env
# 2. 设置 BOT_TOKEN 和 SUPER_ADMIN_ID
# 3. 其他配置保持默认即可

#  生产环境建议：
# - 设置 DEBUG=false
# - 配置 EXCHANGE_RATE_API_KEYS 提高汇率查询限制
# - 确保 logs 和 data 目录有写入权限

#  更多文档：
# - 配置详解：docs/configuration/CONFIG_GUIDE.md
# - 故障排除：docs/troubleshooting/TROUBLESHOOTING.md

